# need to find out if anyone is missing proinsulin ratio at all visits
sortds <- alldata[order(alldata$Random_ID,desc(alldata$Proinsulin_pM_L)),]
hasproins <- sortds %>% group_by(Random_ID) %>% filter(row_number(Random_ID) == 1)
a <- hasproins[is.na(hasproins$Proinsulin_pM_L),]
a <- a[,1]
misspro <- nrow(a)
a$flag <- rep(1,nrow(a))
# 12 subjects missing proinsulin - need to merge this back with original dataset and take those people out
# keep only those IDs that are in both dataframes
alldata <- merge(alldata,a,all.x=TRUE,by="Random_ID")
alldata <- alldata[is.na(alldata$flag),]
# who is missing T1D data?
missingt1d <- alldata[is.na(alldata$T1D),]
# no one is missing t1d status
# group status at each visit - but people can change groups
for(i in 1:nrow(alldata)) {
alldata$group[i] <- ifelse(alldata$T1D[i]=="Yes","T1D",
ifelse(alldata$numpos[i]==0,"Negative",
ifelse(alldata$numpos[i]==1,"Single ab positive","Multiple ab positive")))
}
#-------------------------------------------------------------------------------
# Tim's group status code.
# Separate table for diagnosis.
diagnosis.table <- alldata[,c("Random_ID","Draw_Date","group")]
# save a copy of this data to merge back with the final dx
allresults <- diagnosis.table
# Count diagnoses per subject
counts <- plyr::count(diagnosis.table,c("Random_ID","group"))
# Find participants with only one single ab+
single <- counts[counts$group == "Single ab positive",]
single <- single[single$freq < 2,"Random_ID"]
# Convert group to numeric
diagnosis.table$group <-
plyr::revalue(diagnosis.table$group,c("Negative" = 0,"Single ab positive" = 1,
"Multiple ab positive" = 2,"T1D" = 3))
diagnosis.table$group <- as.numeric(diagnosis.table$group)
# Aggregate diagnosis table taking the maximum value.
diagnosis.table <- aggregate(group ~ Random_ID, data = diagnosis.table, max)
# Find the single ab+ who were incorrectly categorized, set back to 0.
recat <- single[
which(single %in% diagnosis.table[diagnosis.table$group == 1,"Random_ID"])]
diagnosis.table[diagnosis.table$Random_ID %in% recat,"group"] <- 0
colnames(diagnosis.table) <- c("Random_ID","final.group")
# merge final group category with all results
allresults <- merge(allresults,diagnosis.table,by="Random_ID")
# make categorical variable for final group
allresults$final.group[allresults$final.group==0] <- "Negative"
allresults$final.group[allresults$final.group==1] <- "Single ab positive"
allresults$final.group[allresults$final.group==2] <- "Multiple ab positive"
allresults$final.group[allresults$final.group==3] <- "T1D"
# Merge the diagnosis back into the full table.
alldata <- merge(alldata,diagnosis.table,by = "Random_ID")
#-------------------------------------------------------------------------------
# counting number of INS ratios and proinsulin ratios per person
#a <- nont1d %>% group_by(Random_ID) %>% filter(!is.na(Proinsulin_pM_L)) %>% summarize(count=n())
# range from 1 proinsulin ratio to 9
#b <- nont1d %>% group_by(Random_ID) %>% filter(!is.na(U_MplusU_Ratio_Zen)) %>% summarize(count=n())
# range from 1 INS ratio to 3
# find the first draw date
alldata <- alldata[order(alldata$Random_ID,alldata$Draw_Date),]
temp <- aggregate(alldata$Draw_Date,by=list(alldata$Random_ID),min)
names(temp) <- c("Random_ID","first_date")
temp$first_date <- as.Date(temp$first_date)
alldata <- merge(alldata,temp,by = "Random_ID")
alldata$Draw_Date <- as.Date(alldata$Draw_Date)
alldata$time <- alldata$Draw_Date - alldata$first_date
alldata$years <- alldata$time/365.25
# check range of years for non-missing pro-pep
a <- alldata[!is.na(alldata$Pro_pep),]
hist(as.numeric(a$years))
b <- alldata[!is.na(alldata$U_MplusU_Ratio_Zen),]
hist(as.numeric(b$years))
# spaghetti plots of outcomes
qplot(years,Pro_pep,data=alldata,group=Random_ID,color=group,geom="line")
qplot(years,U_MplusU_Ratio_Zen,data=alldata,group=Random_ID,color=group,geom="line")
# now need to determine which INS ratio/proinsulin ratio to use for cross-sectional analyses
# T1D: results closest to T1D onset
alldata$Date_of_Diagnosis <- as.Date(mdy(alldata$Date_of_Diagnosis))
alldata$timec[alldata$final.group==3] <- abs(alldata$Draw_Date[alldata$final.group==3] - alldata$Date_of_Diagnosis[alldata$final.group==3])
# create labeled factor for final.group
#check <- alldata %>% distinct(Random_ID, .keep_all=TRUE)
#table(check$final.group)
alldata$final.group <- as.factor(alldata$final.group)
#check <- alldata %>% distinct(Random_ID, .keep_all=TRUE)
#table(check$final.group)
levels(alldata$final.group) = c("Negative","Single ab positive","Multiple ab positive","T1D")
#check <- alldata %>% distinct(Random_ID, .keep_all=TRUE)
#table(check$final.group)
# pull out T1D - if they have T1D at any time point, they are in the T1D group
t1d <- alldata[alldata$T1D == "Yes",]
t1d <- t1d[order(t1d$Random_ID, t1d$Draw_Date),]
# pull out nonT1D
nont1d <- alldata[alldata$T1D != "Yes",]
nont1d <- nont1d[order(nont1d$Random_ID, nont1d$Draw_Date),]
nneg <- length(unique(nont1d[nont1d$final.group=="Negative",]$Random_ID))
nsing <- length(unique(nont1d[nont1d$final.group=="Single ab positive",]$Random_ID))
nmult <- length(unique(nont1d[nont1d$final.group=="Multiple ab positive",]$Random_ID))
# total of 132 subjects, 15 in T1D and 117 nonT1D
# pull out records with non-missing Pro_pep
t1d_select_pro <- t1d[!is.na(t1d$Pro_pep),]
temp <-  aggregate(t1d_select_pro$timec,by=list(t1d_select_pro$Random_ID),min)
names(temp) <- c("Random_ID","time_from_diagnosis")
t1d_select_pro <- merge(t1d_select_pro,temp,by = "Random_ID")
t1d_select_pro <- t1d_select_pro[t1d_select_pro$time_from_diagnosis==t1d_select_pro$timec,]
# pull out records with nonmissing ins ratio
t1d_select_ins <- t1d[!is.na(t1d$U_MplusU_Ratio_Zen),]
length(unique(t1d_select_ins$Random_ID))
temp <-  aggregate(t1d_select_ins$timec,by=list(t1d_select_ins$Random_ID),min)
names(temp) <- c("Random_ID","time_from_diagnosis")
t1d_select_ins <- merge(t1d_select_ins,temp,by = "Random_ID")
t1d_select_ins <- t1d_select_ins[t1d_select_ins$time_from_diagnosis==t1d_select_ins$timec,]
# for negative, single ab positive, multiple ab positive: use most recent
# pull out records with nonmissing propep
nont1d_select_pro <- nont1d[!is.na(nont1d$Pro_pep),]
check <- nont1d_select_pro %>% distinct(Random_ID, .keep_all=TRUE)
# select the most recent record for each person
temp <- aggregate(nont1d_select_pro$Draw_Date,by=list(nont1d_select_pro$Random_ID),max)
names(temp) <- c("Random_ID","most_recent_draw")
temp$most_recent_draw <- as.Date(temp$most_recent_draw)
nont1d_select_pro <- merge(nont1d_select_pro,temp,by = "Random_ID")
nont1d_select_pro <- nont1d_select_pro[nont1d_select_pro$Draw_Date==nont1d_select_pro$most_recent_draw,]
# pull out records with nonmissing ins ratio
nont1d_select_ins <-nont1d[!is.na(nont1d$U_MplusU_Ratio_Zen),]
# select the most recent record for each person
temp <- aggregate(nont1d_select_ins$Draw_Date,by=list(nont1d_select_ins$Random_ID),max)
names(temp) <- c("Random_ID","most_recent_draw")
temp$most_recent_draw <- as.Date(temp$most_recent_draw)
nont1d_select_ins <- merge(nont1d_select_ins,temp,by = "Random_ID")
nont1d_select_ins <- nont1d_select_ins[nont1d_select_ins$Draw_Date==nont1d_select_ins$most_recent_draw,]
# calculate age at last visit
lastvisit <- aggregate(alldata$Draw_Date,by=list(alldata$Random_ID),max)
View(lastvisit)
View(lastvisit)
names(lastvisit) <- c("Random_ID","last_visit")
alldata <- merge(alldata,lastvisit,by="Random_ID")
View(alldata)
View(alldata)
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
View(keep_ppt)
View(keep_ppt)
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# calculate age at last visit
lastvisit <- aggregate(alldata$Draw_Date,by=list(alldata$Random_ID),max)
names(lastvisit) <- c("Random_ID","last_visit")
alldata <- merge(alldata,lastvisit,by="Random_ID")
alldata$age <- as.duration(alldata$DOB %--% alldata$last_visit) / dyears(1)
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
View(keep_ppt)
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# calculate age at last visit
lastvisit <- aggregate(alldata$Draw_Date,by=list(alldata$Random_ID),max)
names(lastvisit) <- c("Random_ID","last_visit")
alldata <- merge(alldata,lastvisit,by="Random_ID")
alldata$age <- as.duration(alldata$DOB %--% alldata$last_visit) / dyears(1)
View(alldata)
View(alldata)
alldata$age <- floor(as.duration(alldata$DOB %--% alldata$last_visit) / dyears(1))
tables(alldata$Gender)
table(alldata$Gender)
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
table(alldata$Gender)
table(alldata$Race,alldata$Ethnicity)
table(alldata$Race,alldata$Ethnicity)
tables(alldata$HLA)
table(alldata$HLA)
table(alldata$DR3)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT",] <- "PRESENT"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
table(alldata$DR3,alldata$DR4,alldata$DR3DR4)
View(alldata[c("DR3","DR4","DR3DR4")])
View(t1d_select_ins)
View(t1d_select_ins)
table(alldata$Race)
alldata$race_eth[alldata$Race=="White" & (alldata$Ethnicity=="Non-Hispanic origin" | alldata$Ethnicity=="Non-Hispanic white" |
alldata$Ethnicity == "Not Hispanic or Latino")] <- "NHW"
alldata$race_eth[alldata$Ethnicity=="Hispanic" | alldata$Ethnicity=="Hispanic or Latino" | alldata$Ethnicity=="Hispanic/Latino/Spanish origin"] <- "Hispanic"
alldata$race_eth[is.na(alldata$race_eth)] <- "Other"
View(alldata[c("Race","Ethnicity","race_eth")])
# combine race/ethnicity
alldata$race_eth[alldata$Race=="White" & (alldata$Ethnicity=="Non-Hispanic origin" | alldata$Ethnicity=="Non-Hispanic White" |
alldata$Ethnicity == "Not Hispanic or Latino")] <- "NHW"
alldata$race_eth[alldata$Ethnicity=="Hispanic" | alldata$Ethnicity=="Hispanic or Latino" | alldata$Ethnicity=="Hispanic/Latino/Spanish origin"] <- "Hispanic"
alldata$race_eth[is.na(alldata$race_eth)] <- "Other"
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin") |
(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic White") |
(alldata$Race=="White" & alldata$Ethnicity == "Not Hispanic or Latino")] <- "NHW"
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin") ||
(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic White") ||
(alldata$Race=="White" & alldata$Ethnicity == "Not Hispanic or Latino")] <- "NHW"
alldata$test1[alldata$Race=="White"] <- 1
alldata$test2[alldata$Ethnicity=="Non-Hispanic origin"] <- 1
View(alldata[c("Race","Ethnicity","race_eth","test1","test2")])
alldata$test2[alldata$Ethnicity=="Non-Hispanic White"] <- 1
alldata$test2[alldata$Ethnicity=="Non-Hispanic White "] <- 1
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic White")] <- "NHW"
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity == "Not Hispanic or Latino")] <- "NHW"
alldata$race_eth[alldata$Ethnicity=="Hispanic" | alldata$Ethnicity=="Hispanic or Latino" | alldata$Ethnicity=="Hispanic/Latino/Spanish origin"] <- "Hispanic"
alldata$race_eth[is.na(alldata$race_eth)] <- "Other"
alldata$test1[alldata$Race=="White"] <- 1
alldata$test2[alldata$Ethnicity=="Non-Hispanic White "] <- 1
alldata$test2[alldata$Ethnicity=="Non-Hispanic White"] <- 1
View(alldata[c("Race","Ethnicity","race_eth")]
)
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" && alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" && alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
# combine race/ethnicity
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$U.per.MplusU.Ratio.Zen,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","U_MplusU_Ratio_Zen","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
# combine race/ethnicity
alldata$race_eth <- NA
View(alldata[c("Race","Ethnicity","race_eth")])
alldata$race_eth[(alldata$Race=="White" & alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
alldata$race_eth[(alldata$Race=="White" && alldata$Ethnicity=="Non-Hispanic origin")]  <- "NHW"
View(alldata[c("Race","Ethnicity","race_eth")])
