# do proinsulin ratios correlate with biochemical and ECL antibody levels
corr_pro <- rcorr(as.matrix(allpro[, c( "Pro_pep","gadz","ia2z","mIAA","ZnT8","ICA",
"ECL_GADA","ECL_IA2A","ECL_IAA")])
,type = "spearman")
corr_pro <- flattenCorrMatrix(corr_pro$r, corr_pro$P)
corr_pro <- corr_pro[corr_pro$row=="Pro_pep",]
# table 1 - include age at last visit, gender, race/eth, DPT1 score, HLA, A1c
label(tab1data$age)="Age (yrs)"
label(tab1data$HLA)="HLA"
label(tab1data$HbA1c)="HbA1c (%)"
label(tab1data$race_eth)="Race/ethnicity"
label(tab1data$DR3DR4)="DR3 DR4"
View(alldata)
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0,
longitudinal_visit_info$HbA1c,
longitudinal_visit_info$GLU0,
longitudinal_visit_info$GLU30,
longitudinal_visit_info$GLU60,
longitudinal_visit_info$GLU90,
longitudinal_visit_info$GLU120,
longitudinal_visit_info$Height.cm,
longitudinal_visit_info$Weight.kg)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0","HbA1c","GLU0","GLU30","GLU60","GLU90","GLU120","Height","Weight")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
alldata$Gender <- droplevels(alldata$Gender)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
alldata$DR3DR4[is.na(alldata$DR3) & is.na(alldata$DR4)] <- NA
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
# calculate BMI
alldata$BMI <- alldata$Weight / ((alldata$Height/100)^2)
summary(alldata$BMI)
View(alldata[alldata$BMI>30,c("BMI","Height","Weight")])
View(alldata[alldata$BMI>40,c("BMI","Height","Weight")])
bad <- alldata[alldata$BMI>50,]
View(bad)
View(bad)
bad <- bad[!is.na(bad$Random_ID)]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,c("Random_ID","Draw_Date","Height","Weight","BMI"))
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height","Weight","BMI"))
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0,
longitudinal_visit_info$HbA1c,
longitudinal_visit_info$GLU0,
longitudinal_visit_info$GLU30,
longitudinal_visit_info$GLU60,
longitudinal_visit_info$GLU90,
longitudinal_visit_info$GLU120,
longitudinal_visit_info$Height.cm,
longitudinal_visit_info$Weight.kg)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0","HbA1c","GLU0","GLU30","GLU60","GLU90","GLU120","Height.cm","Weight.kg")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
alldata$Gender <- droplevels(alldata$Gender)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
alldata$DR3DR4[is.na(alldata$DR3) & is.na(alldata$DR4)] <- NA
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
#library(sqldf)
library(dplyr)
library(lubridate)
library(graphics)
library(ggplot2)
library(Hmisc)
#library(Table1)
library(knitr)
library(nlme)
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv",na.strings = c("NA"," ","","      "))
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\01_functions.r")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0,
longitudinal_visit_info$HbA1c,
longitudinal_visit_info$GLU0,
longitudinal_visit_info$GLU30,
longitudinal_visit_info$GLU60,
longitudinal_visit_info$GLU90,
longitudinal_visit_info$GLU120,
longitudinal_visit_info$Height.cm,
longitudinal_visit_info$Weight.kg)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0","HbA1c","GLU0","GLU30","GLU60","GLU90","GLU120","Height.cm","Weight.kg")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
alldata$Gender <- droplevels(alldata$Gender)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
alldata$DR3DR4[is.na(alldata$DR3) & is.na(alldata$DR4)] <- NA
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date=="12/30/2008"] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" & alldata$Draw_date=="12/30/2008"] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date=="2008-12-30"] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" & alldata$Draw_date=="2008-12-30"] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date==as.date("2008-12-30")] <- 172.5
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date==as.Date("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" & alldata$Draw_date==as.Date("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
as.date("2008-12-30")
as.Date("2008-12-30")
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date==as.POSIXct("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" & alldata$Draw_date==as.POSIXct("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" && alldata$Draw_date==as.POSIXct("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" && alldata$Draw_date==as.POSIXct("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" && alldata$Draw_date==as.Date("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" && alldata$Draw_date==as.Date("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
bad$test[bad$Draw_Date=="2008-12-30",] <- 1
bad$test[bad$Draw_Date=="2008-12-30"] <- 1
bad$test[bad$Draw_Date==as.Date("2008-12-30")] <- 1
bad$test2[bad$Random_ID=="146273"] <- 1
bad$bmi <- bad$Weight.kg / ((bad$Height.cm/100)^2)
bad$test3[bad$Draw_Date==as.Date("2008-12-30") && bad$Random_ID=="146273"] <- 1
bad$test3[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 1
View(bad)
bad$test[bad$Draw_Date==as.Date("2008-12-30")] <- 1
bad$test2[bad$Random_ID=="146273"] <- 1
bad$test3[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 1
#library(sqldf)
library(dplyr)
library(lubridate)
library(graphics)
library(ggplot2)
library(Hmisc)
#library(Table1)
library(knitr)
library(nlme)
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv",na.strings = c("NA"," ","","      "))
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\01_functions.r")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0,
longitudinal_visit_info$HbA1c,
longitudinal_visit_info$GLU0,
longitudinal_visit_info$GLU30,
longitudinal_visit_info$GLU60,
longitudinal_visit_info$GLU90,
longitudinal_visit_info$GLU120,
longitudinal_visit_info$Height.cm,
longitudinal_visit_info$Weight.kg)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0","HbA1c","GLU0","GLU30","GLU60","GLU90","GLU120","Height.cm","Weight.kg")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
alldata$Gender <- droplevels(alldata$Gender)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
alldata$DR3DR4[is.na(alldata$DR3) & is.na(alldata$DR4)] <- NA
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" && alldata$Draw_date==as.Date("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" && alldata$Draw_date==as.Date("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
bad$test[bad$Draw_Date==as.Date("2008-12-30")] <- 1
bad$test2[bad$Random_ID=="146273"] <- 1
bad$test3[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 1
bad$bmi <- bad$Weight.kg / ((bad$Height.cm/100)^2)
View(bad)
alldata$Draw_date==as.Date("2008-12-30")] <- 57
# correct some values per Andrea
alldata$Height.cm[alldata$Random_ID=="146273" & alldata$Draw_date==as.Date("2008-12-30")] <- 172.5
alldata$Weight.kg[alldata$Random_ID=="146273" & alldata$Draw_date==as.Date("2008-12-30")] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
bad$test[bad$Draw_Date==as.Date("2008-12-30")] <- 1
bad$test2[bad$Random_ID=="146273"] <- 1
bad$test3[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 1
bad$bmi <- bad$Weight.kg / ((bad$Height.cm/100)^2)
View(bad)
bad$Height.cm[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 999
# correct some values per Andrea
alldata$Height.cm[alldata$Draw_date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 172.5
alldata$Weight.kg[alldata$Draw_date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 57
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
bad$test[bad$Draw_Date==as.Date("2008-12-30")] <- 1
bad$test2[bad$Random_ID=="146273"] <- 1
bad$test3[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 1
bad$Height.cm[bad$Draw_Date==as.Date("2008-12-30") & bad$Random_ID=="146273"] <- 172.5
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI")])
# correct some values per Andrea
alldata$Height.cm[alldata$Draw_date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 172.5
alldata$test1[alldata$Draw_Date==as.Date("2008-12-30")] <- 1
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1")])
alldata$test2[alldata$Random_ID=="146273"] <- 1
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1","test2")])
alldata$test3[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 1
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1","test2","test3")])
alldata$Height.cm[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 172.5
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1","test2","test3")])
alldata$Weight.kg[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 57
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1","test2","test3")])
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
View(alldata[c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI", "test1","test2","test3")])
bad <- alldata[alldata$BMI>50,]
View(bad)
bad <- bad[!is.na(bad$Random_ID),]
View(bad)
# read in the data
longitudinal_visit_info <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\longitudinal 091818.csv")
ParticipantInfo_risk <- read.csv("\\\\ucdenver.pvt\\som-home\\pylell\\BDC\\Steck\\Trialnet progressors analysis\\Fourth analysis - demethylated insulin with updated dataset\\Data\\Participant Info risk 091818.csv",na.strings = c("NA"," ","","      "))
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\01_functions.r")
# get rid of duplicates
ParticipantInfo_risk <- unique(ParticipantInfo_risk)
# no duplicates
obslong <- nrow(longitudinal_visit_info)
nppt <- nrow(ParticipantInfo_risk)
# merge participant info and longitudinal data
keep_ppt <- data.frame(ParticipantInfo_risk$TrialNet,
ParticipantInfo_risk$T1D,
ParticipantInfo_risk$Date.of.Diagnosis,
ParticipantInfo_risk$DOB, ParticipantInfo_risk$Gender, ParticipantInfo_risk$Race, ParticipantInfo_risk$Ethnicity,
ParticipantInfo_risk$DPT1.Risk.Score,ParticipantInfo_risk$HLA, ParticipantInfo_risk$DR3,ParticipantInfo_risk$DR4)
colnames(keep_ppt) <- c("Random_ID","T1D","Date_of_Diagnosis","DOB","Gender",
"Race","Ethnicity","DPT1Risk","HLA","DR3","DR4")
keep_long <- data.frame(longitudinal_visit_info$PID,
longitudinal_visit_info$Draw.Date,
longitudinal_visit_info$GAD65,
longitudinal_visit_info$GAD65H,
longitudinal_visit_info$ICA512,
longitudinal_visit_info$IA2H,
longitudinal_visit_info$mIAA,
longitudinal_visit_info$ZnT8,
longitudinal_visit_info$ICA,
longitudinal_visit_info$ECL_GADA,
longitudinal_visit_info$ECL_IA.2A,
longitudinal_visit_info$ECL_IAA,
longitudinal_visit_info$Proinsulin_pM.L,
longitudinal_visit_info$PEP0,
longitudinal_visit_info$HbA1c,
longitudinal_visit_info$GLU0,
longitudinal_visit_info$GLU30,
longitudinal_visit_info$GLU60,
longitudinal_visit_info$GLU90,
longitudinal_visit_info$GLU120,
longitudinal_visit_info$Height.cm,
longitudinal_visit_info$Weight.kg)
colnames(keep_long) <- c("Random_ID","Draw_Date","GAD65","GAD65H","ICA512","IA_2H","mIAA","ZnT8","ICA","ECL_GADA","ECL_IA2A","ECL_IAA","Proinsulin_pM_L","PEP0","HbA1c","GLU0","GLU30","GLU60","GLU90","GLU120","Height.cm","Weight.kg")
# convert draw date to date
#keep_long$Draw_Date <- mdy_hms(as.character(keep_long$Draw_Date))
#keep_long$Draw_Date <- as.POSIXlt(as.character(keep_long$Draw_Date),format="%m%d%Y %H%M")
keep_long$Draw_Date <- mdy_hm(as.character(keep_long$Draw_Date))
keep_ppt$DOB <- mdy(as.character(keep_ppt$DOB))
# calculate fasting Cpeptide in pM/L
keep_long$PEP0_pM_L <- keep_long$PEP0*331.09
# calculate proinsulin/Cpep ratio
keep_long$Pro_pep <- keep_long$Proinsulin_pM_L/keep_long$PEP0_pM_L*100
# merge  datasets
alldata <- merge(keep_ppt,keep_long,by="Random_ID",all.x=F,all.y=F)
N <- length(unique(alldata$Random_ID))
# fix gender coding female Female   male   Male
alldata$Gender[alldata$Gender=='female'] <- "Female"
alldata$Gender[alldata$Gender=='male'] <- "Male"
alldata$Gender <- droplevels(alldata$Gender)
# new variable for DR3/DR4
alldata$DR3DR4[alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT"] <- "PRESENT"
alldata$DR3DR4[!(alldata$DR3=="PRESENT" & alldata$DR4=="PRESENT")] <- "ABSENT"
alldata$DR3DR4[is.na(alldata$DR3) & is.na(alldata$DR4)] <- NA
# correct some values per Andrea
alldata$Height.cm[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 172.5
alldata$Weight.kg[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 57
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
# correct some values per Andrea
alldata$Height.cm[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 172.5
alldata$Weight.kg[alldata$Draw_Date==as.Date("2008-12-30") & alldata$Random_ID=="146273"] <- 57
alldata$Height.cm[alldata$Draw_Date==as.Date("11/26/2008") & alldata$Random_ID=="146513"] <- 164.6
alldata$Height.cm[alldata$Draw_Date==as.Date("2008-11-26") & alldata$Random_ID=="146513"] <- 164.6
alldata$Weight.kg[alldata$Draw_Date==as.Date("2008-11-26") & alldata$Random_ID=="146513"] <- 52.9
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
alldata$Height.cm[alldata$Draw_Date==as.Date("2013-10-14") & alldata$Random_ID=="148088"] <- 161.3
alldata$Weight.kg[alldata$Draw_Date==as.Date("2013-10-14") & alldata$Random_ID=="148088"] <- 67
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
alldata$Height.cm[alldata$Draw_Date==as.Date("2010-08-07") & alldata$Random_ID=="149118"] <- 156.9
alldata$Weight.kg[alldata$Draw_Date==as.Date("2010-08-07") & alldata$Random_ID=="149118"] <- 61.8
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
alldata$Height.cm[alldata$Draw_Date==as.Date("2009-04-20") & alldata$Random_ID=="150283"] <- 184.6
alldata$Weight.kg[alldata$Draw_Date==as.Date("2009-04-20") & alldata$Random_ID=="150283"] <- 125.4
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
View(bad)
alldata$Height.cm[alldata$Draw_Date==as.Date("2015-04-06") & alldata$Random_ID=="237376"] <- 174.9
alldata$Weight.kg[alldata$Draw_Date==as.Date("2015-04-06") & alldata$Random_ID=="237376"] <- 75.39
# calculate BMI
alldata$BMI <- alldata$Weight.kg / ((alldata$Height.cm/100)^2)
bad <- alldata[alldata$BMI>50,]
bad <- bad[!is.na(bad$Random_ID),]
bad <- subset(bad,select=c("Random_ID","Draw_Date","Height.cm","Weight.kg","BMI"))
